version: "3.4"

volumes:
  astro_node_modules:
  redis-data:

services:
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - programming-api
      - programming-ui
    ports:
      - 7800:7800

  programming-api:
    build: 
      context: programming-api
      dockerfile: Dockerfile.prod
    image: programming-api-prod
    restart: "on-failure"
    volumes:
      - ./programming-api/:/app
      - ./app-cache/:/app-cache
    expose:
      - 7777
    depends_on:
      - database
      - flyway
    env_file:
      - project.env
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: "5s"
        max_attempts: 5
        window: "30s"
    

  programming-ui:
    build:
      context: programming-ui
      dockerfile: Dockerfile.prod
    image: programming-ui-prod
    restart: "on-failure"
    volumes:
      - ./programming-ui/:/app
      - astro_node_modules:/app/node_modules
    expose:
      - 3000:80
    depends_on:
      - programming-api
    deploy:
      restart_policy:
        condition: on-failure
        delay: "5s"
        max_attempts: 5
        window: "30s"

  grader-api:
    build: 
      context: grader-api
      dockerfile: Dockerfile.prod
    image: grader-api-prod
    restart: "on-failure"
    volumes:
      - ./grader-api/:/app
      - ./app-cache/:/app-cache
      - "/var/run/docker.sock:/var/run/docker.sock"
    expose:
      - 7000
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: "5s"
        max_attempts: 5
        window: "30s"

  grader-image:
    build:
      context: ./grader-image  # Path to your grader-image folder
    image: grader-image
    restart: "no"
    expose:
      - 8000  # Expose any necessary port, if grader-image service needs it

  database:
    container_name: database-server-dab-p1-1ea650f4-36e7-487c-be8a-c26a8a58dbb3
    image: postgres:14.1
    restart: unless-stopped
    volumes:
      - ./production-database-data:/var/lib/postgresql/data
    env_file:
      - project.env

  flyway:
    image: flyway/flyway:9.11.0-alpine
    depends_on:
      - database
    volumes:
      - ./flyway/sql/:/flyway/sql
    command: -connectRetries=60 -baselineOnMigrate=true migrate
    env_file:
      - project.env

  # e2e-playwright:
  #   entrypoint: "/bin/true"
  #   build: e2e-playwright
  #   image: e2e-playwright
  #   network_mode: host
  #   depends_on:
  #     - nginx
  #   volumes:
  #     - ./e2e-playwright/tests:/e2e-playwright/tests
  
  redis:
    image: redis:latest
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
      - redis-data:/data  # Persist Redis data
    expose:
      - 6379

  producer:
    build: producer
    image: producer
    restart: "on-failure"
    volumes:
      - ./producer/:/app
      - ./app-cache/:/app-cache
    expose:
      - 7778
    deploy:  
      restart_policy:
        condition: on-failure
        delay: "5s"
        max_attempts: 5
        window: "30s"

  consumer:
    build: consumer
    image: consumer
    restart: "on-failure"
    volumes:
      - ./consumer/:/app
      - ./app-cache/:/app-cache
    deploy:  
      restart_policy:
        condition: on-failure
        delay: "5s"
        max_attempts: 5
        window: "30s"